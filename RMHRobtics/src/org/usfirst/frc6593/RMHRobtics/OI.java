// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6593.RMHRobtics;

import org.usfirst.frc6593.RMHRobtics.commands.*;
import org.usfirst.frc6593.RMHRobtics.subsystems.DriveTrain;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton x_Button;
    public JoystickButton r_Bumper;
    public JoystickButton l_Bumper;
    public Joystick xbox_Joystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
    	
    	// l_Bumper = new JoystickButton(xbox_Joystick, 6);
        // l_Bumper.whileHeld(new InvertClimbing());
       //  l_Bumper.whenReleased(new StopClimb());
         
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        xbox_Joystick = new Joystick(0);
        
        r_Bumper = new JoystickButton(xbox_Joystick, 2);
        r_Bumper.whileHeld(new Shoot());
        r_Bumper.whenReleased(new StopShoot());
        
        x_Button = new JoystickButton(xbox_Joystick, 5);
        x_Button.whileHeld(new Climb());
        x_Button.whenReleased(new StopClimb());



        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("TankDrive", new TankDrive());
        SmartDashboard.putData("Climb", new Climb());
        SmartDashboard.putData("Shoot", new Shoot());
        SmartDashboard.putData("GyroTuring", new GyroTuring());
        SmartDashboard.putData("LeftStation", new LeftStation());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
       // SmartDashboard.putNumber("GyroAngle", DriveTrain.gyro.getAngle());
        //SmartDashboard.putNumber("UlratraSonicRange", DriveTrain.rangeFinder.getAverageVoltage());
        
    }
    public double getDriveLeftSpeed() {
    	return xbox_Joystick.getRawAxis(1);
    }
    
    public double getDriveRightSpeed() {
    	return xbox_Joystick.getRawAxis(5);
    }
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getXbox_Joystick() {
        return xbox_Joystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

